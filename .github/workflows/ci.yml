name: CI

on:
  push:
    branches:
      - main
      - next
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}

env:
  PROJECT_UNITY_VERSION: 2020.3.41f1

jobs:
  buildAndTestForLinux:
    name: Build & Test for StandaloneLinux64 on ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.3.41f1
          - 2021.3.11f1
          - 2022.1.18f1
            
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-StandaloneLinux64-${{ matrix.unityVersion }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-StandaloneLinux64-${{ matrix.unityVersion }}-
            Library-StandaloneLinux64-
            Library-
            
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
            
      - uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          customParameters: -debugCodeOptimization -enableCodeCoverage -coverageResultsPath ./CodeCoverage -coverageOptions "useProjectSettings;generateAdditionalMetrics"
          
      - name: Build Roslyn project
        run: dotnet build ./UIComponents.Roslyn/UIComponents.Roslyn.sln -c Release
        
      - name: Test Roslyn project
        run: dotnet test ./UIComponents.Roslyn/UIComponents.Roslyn.sln -c Release --no-build --verbosity normal
          
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
          
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          name: Tests
          flags: automated
          token: ${{ secrets.CODECOV_TOKEN }}
          files: CodeCoverage/**/*.xml
          
      - name: Commit upgrade changes
        if: ${{ matrix.unityVersion != env.PROJECT_UNITY_VERSION }}
        run: |
          git config --global user.name 'github-bot'
          git config --global user.email 'github-bot@users.noreply.github.com'
          git add -A
          git commit -m "chore(ci): switch to different unity version"
          
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: StandaloneLinux64

  buildForWindows:
    name: Build for 64-bit Windows on ${{ matrix.unityVersion }}
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.3.41f1
          - 2021.3.11f1
          - 2022.1.18f1

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-StandaloneWindows64-${{ matrix.unityVersion }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-StandaloneWindows64-${{ matrix.unityVersion }}-
            Library-StandaloneWindows64-
            Library-
            
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
            
      - uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: StandaloneWindows64
        
      - name: Build Roslyn project
        run: dotnet build ./UIComponents.Roslyn/UIComponents.Roslyn.sln -c Release

      - name: Test Roslyn project
        run: dotnet test ./UIComponents.Roslyn/UIComponents.Roslyn.sln -c Release --no-build --verbosity normal
